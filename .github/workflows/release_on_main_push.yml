name: Build and Release
run-name: Build and Release
on: 
    push:
      branches:
        - main
      
jobs:
    Build:
      if: ${{ !contains(github.event.head_commit.message, '[skip build]') }}
      name: Build and Release
      runs-on: ubuntu-latest

      permissions: 
        contents: write

      steps:
        - name: "Checkout repository"
          uses: actions/checkout@v4
        
        - name: Install uv
          uses: astral-sh/setup-uv@v4
          with:
            enable-cache: true
            cache-dependency-glob: "requirements_dev.txt"
  
        - name: "Set up Python"
          uses: actions/setup-python@v5
          with:
            python-version-file: "pyproject.toml"

        - name: Install requirements
          run: uv pip install -r requirements_dev.txt
          env:
            UV_SYSTEM_PYTHON: 1

        - name: Build
          run: python package.py build --yes

        - name: Create Github Release
          run: |
            gh release create "$PACKAGE_BUILD_VERSION" \
              ./dist/*.tar.gz \
              ./dist/*.whl \
              --repo="$GITHUB_REPOSITORY" \
              --title="$PACKAGE_BUILD_VERSION" \
              --generate-notes
          env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        - name: Push docs to repository.
          run: |
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add docs/*
            git add -f docs/.nojekyll
            git add -f data/badges/\*.svg
            git add pyproject.toml
            git commit -m "[skip build] Commit docs of version $PACKAGE_BUILD_VERSION." \
              -m "Metrics:" \
              -m "  - Build: $PACKAGE_BUILD_PASSED" \
              -m "  - Test: $PACKAGE_TEST_PASSED" \
              -m "  - Test Coverage: $PACKAGE_TEST_COVERAGE %" \
              -m "  - Doc Coverage: $PACKAGE_DOC_COVERAGE %" \
              -m "  - Vulnerabilities: $PACKAGE_VULNERABILITIES"
            git push origin
  
        - name: Minimize uv cache
          run: uv cache prune --ci
       
        